#!/bin/bash

set -euo pipefail

# System
source /etc/os-release
ARCH="$(uname -m)"
SUPPORTED_ARCHS=("x86_64" "aarch64")
SUPPORTED_DISTROS=("debian" "ubuntu")

# Colors
RED="\033[1;31m"
BLUE="\033[1;34m"
RESET="\033[0m"
GREEN="\033[1;32m"

ok() {
  echo -e "${GREEN}[OK   ] $*${RESET}"
}

error() {
  echo -e "${RED}[ERROR] $*${RESET}" >&2
  exit 1
}

info() {
  echo -e "${BLUE}[INFO ] $*${RESET}"
}

# Must run as root
if [[ $EUID -ne 0 ]]; then
  error "This script must be run with sudo or as root."
fi

# Check supported distro
IS_DISTRO_SUPPORTED=0
for d in "${SUPPORTED_DISTROS[@]}"; do
  if [[ "$ID" == "$d" ]]; then
    IS_DISTRO_SUPPORTED=1
    info "Linux Distro: $ID"
    break
  fi
done
[[ $IS_DISTRO_SUPPORTED -eq 1 ]] || error "Linux Distro Unsupported: $ID"

# Check supported arch
IS_ARCH_SUPPORTED=0
for a in "${SUPPORTED_ARCHS[@]}"; do
  if [[ "$ARCH" == "$a" ]]; then
    IS_ARCH_SUPPORTED=1
    info "Architecture: $ARCH"
    break
  fi
done
[[ $IS_ARCH_SUPPORTED -eq 1 ]] || error "Architecture Unsupported: $ARCH"

# Install config
function install_config() {
  info "writing config file"

  mkdir -p /etc/supabase || error "failed to create /etc/supabase"

  DASHBOARD_USERNAME="admin"
  DASHBOARD_PASSWORD=$(openssl rand -base64 48 | tr -dc 'A-Za-z0-9' | head -c 64)
  POSTGRES_PASSWORD=$(openssl rand -base64 48 | tr -dc 'A-Za-z0-9' | head -c 64)
  JWT_SECRET=$(openssl rand -base64 48 | tr -dc 'A-Za-z0-9' | head -c 64)

  # write the config file
  cat > /etc/supabase/conf.env <<EOF
DASHBOARD_USERNAME=$DASHBOARD_USERNAME
DASHBOARD_PASSWORD=$DASHBOARD_PASSWORD
PGPASSWORD=$POSTGRES_PASSWORD
POSTGRES_PASSWORD=$POSTGRES_PASSWORD
JWT_SECRET=$JWT_SECRET
PGRST_DB_URI=postgres://authenticator=$POSTGRES_PASSWORD@127.0.0.1:5432/postgres
PGRST_APP_SETTINGS_JWT_SECRET=$JWT_SECRET
PGRST_JWT_SECRET=$JWT_SECRET
EOF

  chmod 644 /etc/supabase/conf.env
  ok "wrote config file to /etc/supabase/conf.env"
}

install_config