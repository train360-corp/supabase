on:
  push:
    paths:
      - 'version.json'

jobs:
  version:
    uses: train360-corp/actions/.github/workflows/version-check.yml@main
    with:
      file-name: version.json
      json-version-path: .version
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  build-studio:
    runs-on: ${{ matrix.os.runs-on }}
    needs: version
    strategy:
      matrix:
        os:
          - runs-on: ubuntu-24.04
            arch: amd64
          - runs-on: ubuntu-24.04-arm
            arch: arm64
    env:
      VERSION: ${{ needs.version.outputs.version }}
      ARCH: ${{ matrix.os.arch }}
      STUDIO_RELEASE: ghcr.io/supabase/studio:2025.07.21-sha-88dca02
      STUDIO_RELEASE_SHA: 88dca021d6b5201b3561a37f452a4f91598a8311
    steps:
      - uses: actions/checkout@v4
        with:
          repository: supabase/supabase
          ref: ${{ env.STUDIO_RELEASE_SHA }}
  build:
    runs-on: ${{ matrix.os.runs-on }}
    needs:
      - version
      - build-studio
    strategy:
      matrix:
        os:
          - runs-on: ubuntu-24.04
            arch: amd64
          - runs-on: ubuntu-24.04-arm
            arch: arm64

    env:
      VERSION: ${{ needs.version.outputs.version }}
      ARCH: ${{ matrix.os.arch }}

    steps:
      - uses: actions/checkout@v4

      - name: Generate control file from template
        run: envsubst < control.template > supabase/DEBIAN/control

      - run: cat supabase/DEBIAN/control

      - name: Build .deb package
        run: |
          mkdir -p dist
          chmod 755 supabase/DEBIAN/postinst
          dpkg-deb --build supabase "dist/supabase_${VERSION}_${ARCH}.deb"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: supabase-deb-${{ matrix.os.arch }}
          path: dist/*.deb
  release:
    runs-on: ubuntu-22.04
    needs:
      - build
      - version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded artifacts
        run: find artifacts -type f

      - run: sed -i "s/__VERSION__/${VERSION}/g" install.sh
        env:
          VERSION: ${{ needs.version.outputs.version }}

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ needs.version.outputs.version }}
          tag_name: v${{ needs.version.outputs.version }}
          files: |
            artifacts/**/*.deb
            LICENSE
            install.sh
          body: |
            ## Installation

            Download and install the `.deb` package for your architecture:

            ```bash
            bash <(wget -qO- "https://github.com/train360-corp/supabase/releases/download/v${{ needs.version.outputs.version }}/install.sh")
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}